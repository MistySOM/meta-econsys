!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR0234_120_FPS	common.h	/^	AR0234_120_FPS,$/;"	e	enum:ar0234_frame_rate
AR0234_60_FPS	common.h	/^	AR0234_60_FPS,$/;"	e	enum:ar0234_frame_rate
AR0234_65_FPS	common.h	/^	AR0234_65_FPS,$/;"	e	enum:ar0234_frame_rate
AR0234_NUM_FRAMERATES	common.h	/^	AR0234_NUM_FRAMERATES,$/;"	e	enum:ar0234_frame_rate
AR0234_NUM_SUPPLIES	common.h	61;"	d
BL_ERASE_MEM	firmware.h	/^        BL_ERASE_MEM = 0x44,$/;"	e	enum:_i2c_cmds
BL_ERASE_MEM_NS	firmware.h	/^        BL_ERASE_MEM_NS = 0x45,$/;"	e	enum:_i2c_cmds
BL_GET_VERSION	firmware.h	/^        BL_GET_VERSION = 0x01,$/;"	e	enum:_i2c_cmds
BL_GO	firmware.h	/^        BL_GO = 0x21,$/;"	e	enum:_i2c_cmds
BL_READ_MEM	firmware.h	/^        BL_READ_MEM = 0x11,$/;"	e	enum:_i2c_cmds
BL_WRITE_MEM	firmware.h	/^        BL_WRITE_MEM = 0x31,$/;"	e	enum:_i2c_cmds
BL_WRITE_MEM_NS	firmware.h	/^        BL_WRITE_MEM_NS = 0x32,$/;"	e	enum:_i2c_cmds
CMD_ID_DE_INIT_CAM	firmware.h	/^	CMD_ID_DE_INIT_CAM = 0x06,$/;"	e	enum:_cmd_id
CMD_ID_FW_UPDT	firmware.h	/^	CMD_ID_FW_UPDT = 0x14,$/;"	e	enum:_cmd_id
CMD_ID_GET_CTRL	firmware.h	/^	CMD_ID_GET_CTRL = 0x10,$/;"	e	enum:_cmd_id
CMD_ID_GET_CTRL_INFO	firmware.h	/^	CMD_ID_GET_CTRL_INFO = 0x03,$/;"	e	enum:_cmd_id
CMD_ID_GET_CTRL_UI_INFO	firmware.h	/^	CMD_ID_GET_CTRL_UI_INFO = 0x0A,$/;"	e	enum:_cmd_id
CMD_ID_GET_SENSOR_ID	firmware.h	/^	CMD_ID_GET_SENSOR_ID = 0x01,$/;"	e	enum:_cmd_id
CMD_ID_GET_STATUS	firmware.h	/^	CMD_ID_GET_STATUS = 0x05,$/;"	e	enum:_cmd_id
CMD_ID_GET_STREAM_INFO	firmware.h	/^	CMD_ID_GET_STREAM_INFO = 0x02,$/;"	e	enum:_cmd_id
CMD_ID_INIT_CAM	firmware.h	/^	CMD_ID_INIT_CAM = 0x04,$/;"	e	enum:_cmd_id
CMD_ID_ISP_PDOWN	firmware.h	/^	CMD_ID_ISP_PDOWN = 0x15,$/;"	e	enum:_cmd_id
CMD_ID_ISP_PUP	firmware.h	/^	CMD_ID_ISP_PUP = 0x16,$/;"	e	enum:_cmd_id
CMD_ID_LANE_CONFIG	firmware.h	/^	CMD_ID_LANE_CONFIG = 0x17,$/;"	e	enum:_cmd_id
CMD_ID_MIPI_CLK_CONFIG	firmware.h	/^	CMD_ID_MIPI_CLK_CONFIG = 0x18,$/;"	e	enum:_cmd_id
CMD_ID_SET_CTRL	firmware.h	/^	CMD_ID_SET_CTRL = 0x11,$/;"	e	enum:_cmd_id
CMD_ID_STREAM_CONFIG	firmware.h	/^	CMD_ID_STREAM_CONFIG = 0x09,$/;"	e	enum:_cmd_id
CMD_ID_STREAM_OFF	firmware.h	/^	CMD_ID_STREAM_OFF = 0x08,$/;"	e	enum:_cmd_id
CMD_ID_STREAM_ON	firmware.h	/^	CMD_ID_STREAM_ON = 0x07,$/;"	e	enum:_cmd_id
CMD_ID_UNKNOWN	firmware.h	/^	CMD_ID_UNKNOWN = 0xFF,$/;"	e	enum:_cmd_id
CMD_ID_VERSION	firmware.h	/^	CMD_ID_VERSION = 0x00,$/;"	e	enum:_cmd_id
CMD_SIGNATURE	firmware.h	19;"	d
CMD_STATUS_MSG_LEN	firmware.h	23;"	d
CR	firmware.h	13;"	d
CTRL_EXTENDED	firmware.h	/^	CTRL_EXTENDED = 0x02,$/;"	e	enum:__anon11
CTRL_STANDARD	firmware.h	/^	CTRL_STANDARD = 0x01,$/;"	e	enum:__anon11
DEBUG	ecam-ar0234.c	8;"	d	file:
DEBUG_PRINTKx	ecam-ar0234.c	10;"	d	file:
ERRCODE_AGAIN	firmware.h	/^	ERRCODE_AGAIN = 0x07,$/;"	e	enum:_errno
ERRCODE_ALREADY	firmware.h	/^	ERRCODE_ALREADY = 0x08,$/;"	e	enum:_errno
ERRCODE_BUSY	firmware.h	/^	ERRCODE_BUSY = 0x01,$/;"	e	enum:_errno
ERRCODE_HW_SPEC	firmware.h	/^	ERRCODE_HW_SPEC = 0x06,$/;"	e	enum:_errno
ERRCODE_INVAL	firmware.h	/^	ERRCODE_INVAL = 0x02,$/;"	e	enum:_errno
ERRCODE_IO	firmware.h	/^	ERRCODE_IO = 0x05,$/;"	e	enum:_errno
ERRCODE_NODEV	firmware.h	/^	ERRCODE_NODEV = 0x04,$/;"	e	enum:_errno
ERRCODE_NOTIMPL	firmware.h	/^	ERRCODE_NOTIMPL = 0x09,$/;"	e	enum:_errno
ERRCODE_PERM	firmware.h	/^	ERRCODE_PERM = 0x03,$/;"	e	enum:_errno
ERRCODE_RANGE	firmware.h	/^	ERRCODE_RANGE = 0x0A,$/;"	e	enum:_errno
ERRCODE_SUCCESS	firmware.h	/^	ERRCODE_SUCCESS = 0x00,$/;"	e	enum:_errno
ERRCODE_UNKNOWN	firmware.h	/^	ERRCODE_UNKNOWN = 0xFF,$/;"	e	enum:_errno
EXPOSURE_COMPENSATION	common.h	28;"	d
EXT_CTRL_TYPE_INTEGER	firmware.h	/^	EXT_CTRL_TYPE_INTEGER = 0x01,$/;"	e	enum:__anon12
EXT_CTRL_TYPE_LONG	firmware.h	/^	EXT_CTRL_TYPE_LONG = 0x02,$/;"	e	enum:__anon12
EXT_CTRL_TYPE_PTR16	firmware.h	/^	EXT_CTRL_TYPE_PTR16 = 0x05,$/;"	e	enum:__anon12
EXT_CTRL_TYPE_PTR32	firmware.h	/^	EXT_CTRL_TYPE_PTR32 = 0x06,$/;"	e	enum:__anon12
EXT_CTRL_TYPE_PTR8	firmware.h	/^	EXT_CTRL_TYPE_PTR8 = 0x04,$/;"	e	enum:__anon12
EXT_CTRL_TYPE_STRING	firmware.h	/^	EXT_CTRL_TYPE_STRING = 0x03,$/;"	e	enum:__anon12
EXT_CTRL_TYPE_VOID	firmware.h	/^	EXT_CTRL_TYPE_VOID = 0x07,$/;"	e	enum:__anon12
FLASH_READ_LEN	firmware.h	11;"	d
FLASH_SIZE	firmware.h	10;"	d
FLASH_START_ADDRESS	firmware.h	9;"	d
FRAME_RATE_CONTINOUS	firmware.h	/^	FRAME_RATE_CONTINOUS = 0x02,$/;"	e	enum:__anon10
FRAME_RATE_DISCRETE	firmware.h	/^	FRAME_RATE_DISCRETE = 0x01,$/;"	e	enum:__anon10
FREE_SAFE	common.h	226;"	d
HEADER_FOOTER_SIZE	firmware.h	22;"	d
HOST_CMD_ID	firmware.h	/^} HOST_CMD_ID;$/;"	t	typeref:enum:_cmd_id
IHEX_RECORD	firmware.h	/^} IHEX_RECORD;$/;"	t	typeref:struct:_ihex_rec
ISP_CTRL_INFO	common.h	/^} ISP_CTRL_INFO;$/;"	t	typeref:struct:_isp_ctrl_info_std
ISP_CTRL_UI_INFO	common.h	/^} ISP_CTRL_UI_INFO;$/;"	t	typeref:struct:_isp_ctrl_ui_info
ISP_STREAM_INFO	common.h	/^} ISP_STREAM_INFO;$/;"	t	typeref:struct:_isp_stream_info
LF	firmware.h	14;"	d
MAX_BUF_LEN	firmware.h	3;"	d
MAX_CTRL_DATA_LEN	firmware.h	34;"	d
MAX_CTRL_UI_STRING_LEN	firmware.h	35;"	d
MAX_MODE_SUPPORTED	firmware.h	36;"	d
MAX_NUM_FRATES	firmware.h	33;"	d
MAX_PAGES	firmware.h	5;"	d
MCU_BUFFER_SIZE	firmware.h	17;"	d
MCU_CMD_STATUS_ISP_PWDN	firmware.h	30;"	d
MCU_CMD_STATUS_ISP_UNINIT	firmware.h	31;"	d
MCU_CMD_STATUS_PENDING	firmware.h	29;"	d
MCU_CMD_STATUS_SUCCESS	firmware.h	28;"	d
NUM_ERASE_CYCLES	firmware.h	7;"	d
NUM_LANES_1	firmware.h	/^	NUM_LANES_1 = 0x01,$/;"	e	enum:__anon9
NUM_LANES_2	firmware.h	/^	NUM_LANES_2 = 0x02,$/;"	e	enum:__anon9
NUM_LANES_3	firmware.h	/^	NUM_LANES_3 = 0x02,$/;"	e	enum:__anon9
NUM_LANES_4	firmware.h	/^	NUM_LANES_4 = 0x04,$/;"	e	enum:__anon9
NUM_LANES_UNKWN	firmware.h	/^	NUM_LANES_UNKWN = 0xFF,$/;"	e	enum:__anon9
REC_TYPE_DATA	firmware.h	/^        REC_TYPE_DATA = 0x00,$/;"	e	enum:_ihex_rectype
REC_TYPE_ELA	firmware.h	/^        REC_TYPE_ELA = 0x04,$/;"	e	enum:_ihex_rectype
REC_TYPE_EOF	firmware.h	/^        REC_TYPE_EOF = 0x01,$/;"	e	enum:_ihex_rectype
REC_TYPE_ESA	firmware.h	/^        REC_TYPE_ESA = 0x02,$/;"	e	enum:_ihex_rectype
REC_TYPE_SLA	firmware.h	/^        REC_TYPE_SLA = 0x05,$/;"	e	enum:_ihex_rectype
REC_TYPE_SSA	firmware.h	/^        REC_TYPE_SSA = 0x03,$/;"	e	enum:_ihex_rectype
RESP_ACK	firmware.h	/^        RESP_ACK = 0x79,$/;"	e	enum:_i2c_resp
RESP_BUSY	firmware.h	/^        RESP_BUSY = 0x76,$/;"	e	enum:_i2c_resp
RESP_NACK	firmware.h	/^        RESP_NACK = 0x1F,$/;"	e	enum:_i2c_resp
RETCODE	firmware.h	/^} RETCODE;$/;"	t	typeref:enum:_errno
RX_LEN_PKT	firmware.h	21;"	d
SRC	Makefile	/^SRC := $(shell pwd)$/;"	m
TOTAL_PAGES	firmware.h	6;"	d
TX_LEN_PKT	firmware.h	20;"	d
V4L2_CID_CAMERA_CLASS_BASE	common.h	20;"	d
V4L2_CID_EXPOSURE_ABSOLUTE	common.h	23;"	d
V4L2_CID_EXPOSURE_AUTO	common.h	22;"	d
V4L2_CID_ROI_EXPOSURE	common.h	25;"	d
V4L2_CID_ROI_WINDOW_SIZE	common.h	24;"	d
V4L2_CTRL_CLASS_CAMERA	common.h	19;"	d
V4L2_DENOISE	common.h	27;"	d
V4L2_FRAME_SYNC	common.h	26;"	d
VERSION_FILE_OFFSET	firmware.h	26;"	d
VERSION_SIZE	firmware.h	25;"	d
__ar0234_get_pad_crop	ecam-ar0234.c	/^__ar0234_get_pad_crop(struct ar0234 *ar0234, struct v4l2_subdev_pad_config *cfg,$/;"	f	file:
__ar0234_get_pad_format	ecam-ar0234.c	/^__ar0234_get_pad_format(struct ar0234 *ar0234,$/;"	f	file:
_cmd_id	firmware.h	/^typedef enum _cmd_id {$/;"	g
_errno	firmware.h	/^typedef enum _errno {$/;"	g
_i2c_cmds	firmware.h	/^enum _i2c_cmds$/;"	g
_i2c_resp	firmware.h	/^enum _i2c_resp$/;"	g
_ihex_rec	firmware.h	/^typedef struct __attribute__ ((packed)) _ihex_rec {$/;"	s
_ihex_rectype	firmware.h	/^enum _ihex_rectype$/;"	g
_isp_ctrl_info_std	common.h	/^typedef struct _isp_ctrl_info_std {$/;"	s
_isp_ctrl_ui_info	common.h	/^typedef struct _isp_ctrl_ui_info {$/;"	s
_isp_stream_info	common.h	/^typedef struct _isp_stream_info {$/;"	s
addr	firmware.h	/^        unsigned short int addr;$/;"	m	struct:_ihex_rec
aec_pk_manual	common.h	/^	u8 aec_pk_manual;$/;"	m	struct:ar0234
ar0234	common.h	/^struct ar0234 {$/;"	s
ar0234_core_ops	ecam-ar0234.c	/^static const struct v4l2_subdev_core_ops ar0234_core_ops = {$/;"	v	typeref:struct:v4l2_subdev_core_ops	file:
ar0234_ctrl_ops	ecam-ar0234.c	/^static const struct v4l2_ctrl_ops ar0234_ctrl_ops = {$/;"	v	typeref:struct:v4l2_ctrl_ops	file:
ar0234_entity_init_cfg	ecam-ar0234.c	/^static int ar0234_entity_init_cfg(struct v4l2_subdev *subdev,$/;"	f	file:
ar0234_enum_frame_interval	ecam-ar0234.c	/^static int ar0234_enum_frame_interval($/;"	f	file:
ar0234_enum_frame_size	ecam-ar0234.c	/^static int ar0234_enum_frame_size(struct v4l2_subdev *subdev,$/;"	f	file:
ar0234_enum_mbus_code	ecam-ar0234.c	/^static int ar0234_enum_mbus_code(struct v4l2_subdev *sd,$/;"	f	file:
ar0234_find_mode	ecam-ar0234.c	/^ar0234_find_mode(struct ar0234 *sensor, enum ar0234_frame_rate fr,$/;"	f	file:
ar0234_formats	common.h	/^static const struct ar0234_pixfmt ar0234_formats[] = {$/;"	v	typeref:struct:ar0234_pixfmt
ar0234_frame_rate	common.h	/^enum ar0234_frame_rate {$/;"	g
ar0234_framerates	common.h	/^static const int ar0234_framerates[] = {$/;"	v
ar0234_g_frame_interval	ecam-ar0234.c	/^static int ar0234_g_frame_interval(struct v4l2_subdev *sd,$/;"	f	file:
ar0234_get_format	ecam-ar0234.c	/^static int ar0234_get_format(struct v4l2_subdev *sd,$/;"	f	file:
ar0234_get_selection	ecam-ar0234.c	/^static int ar0234_get_selection(struct v4l2_subdev *sd,$/;"	f	file:
ar0234_i2c_driver	ecam-ar0234.c	/^module_i2c_driver(ar0234_i2c_driver);$/;"	v
ar0234_i2c_driver	ecam-ar0234.c	/^static struct i2c_driver ar0234_i2c_driver = {$/;"	v	typeref:struct:i2c_driver	file:
ar0234_id	ecam-ar0234.c	/^static const struct i2c_device_id ar0234_id[] = {$/;"	v	typeref:struct:i2c_device_id	file:
ar0234_mode_info	common.h	/^struct ar0234_mode_info {$/;"	s
ar0234_mode_info_data	common.h	/^static const struct ar0234_mode_info ar0234_mode_info_data[] = {$/;"	v	typeref:struct:ar0234_mode_info
ar0234_of_match	ecam-ar0234.c	/^static const struct of_device_id ar0234_of_match[] = {$/;"	v	typeref:struct:of_device_id	file:
ar0234_pixfmt	common.h	/^struct ar0234_pixfmt {$/;"	s
ar0234_probe	ecam-ar0234.c	/^static int ar0234_probe(struct i2c_client *client)$/;"	f	file:
ar0234_read	ecam-ar0234.c	/^static int ar0234_read(struct i2c_client *client, u8 * val, u32 count)$/;"	f	file:
ar0234_remove	ecam-ar0234.c	/^static int ar0234_remove(struct i2c_client *client)$/;"	f	file:
ar0234_s_ctrl	ecam-ar0234.c	/^static int ar0234_s_ctrl(struct v4l2_ctrl *ctrl)$/;"	f	file:
ar0234_s_frame_interval	ecam-ar0234.c	/^static int ar0234_s_frame_interval(struct v4l2_subdev *sd,$/;"	f	file:
ar0234_s_power	ecam-ar0234.c	/^static int ar0234_s_power(struct v4l2_subdev *sd, int on)$/;"	f	file:
ar0234_s_stream	ecam-ar0234.c	/^static int ar0234_s_stream(struct v4l2_subdev *subdev, int enable)$/;"	f	file:
ar0234_set_format	ecam-ar0234.c	/^static int ar0234_set_format(struct v4l2_subdev *sd,$/;"	f	file:
ar0234_set_power_off	ecam-ar0234.c	/^static void ar0234_set_power_off(struct ar0234 *ar0234)$/;"	f	file:
ar0234_set_power_on	ecam-ar0234.c	/^static int ar0234_set_power_on(struct ar0234 *ar0234)$/;"	f	file:
ar0234_subdev_ops	ecam-ar0234.c	/^static const struct v4l2_subdev_ops ar0234_subdev_ops = {$/;"	v	typeref:struct:v4l2_subdev_ops	file:
ar0234_subdev_pad_ops	ecam-ar0234.c	/^static const struct v4l2_subdev_pad_ops ar0234_subdev_pad_ops = {$/;"	v	typeref:struct:v4l2_subdev_pad_ops	file:
ar0234_supply_name	common.h	/^static const char * const ar0234_supply_name[] = {$/;"	v
ar0234_try_add_ctrls	ecam-ar0234.c	/^static int ar0234_try_add_ctrls(struct ar0234 *ar0234, int index,$/;"	f	file:
ar0234_try_frame_interval	ecam-ar0234.c	/^static int ar0234_try_frame_interval(struct ar0234 *sensor,$/;"	f	file:
ar0234_video_ops	ecam-ar0234.c	/^static const struct v4l2_subdev_video_ops ar0234_video_ops = {$/;"	v	typeref:struct:v4l2_subdev_video_ops	file:
ar0234_write	ecam-ar0234.c	/^static int ar0234_write(struct i2c_client *client, u8 * val, u32 count)$/;"	f	file:
camera_common_frmfmt	common.h	/^struct camera_common_frmfmt {$/;"	s
camera_initialization	ecam-ar0234.c	/^int camera_initialization(struct ar0234 *ar0234)$/;"	f
code	common.h	/^	u32 code;$/;"	m	struct:ar0234_pixfmt
colorspace	common.h	/^	u32 colorspace;$/;"	m	struct:ar0234_pixfmt
cont	common.h	/^		} cont;$/;"	m	union:_isp_stream_info::__anon3	typeref:struct:_isp_stream_info::__anon3::__anon5
crop	common.h	/^	struct v4l2_rect crop;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_rect
ctrl	common.h	/^	struct v4l2_ctrl *ctrl[];$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_ctrl
ctrl_data	common.h	/^	} ctrl_data;$/;"	m	struct:_isp_ctrl_info_std	typeref:union:_isp_ctrl_info_std::__anon6
ctrl_def	common.h	/^			int32_t ctrl_def;$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon7
ctrl_id	common.h	/^	uint32_t ctrl_id;$/;"	m	struct:_isp_ctrl_info_std
ctrl_max	common.h	/^			int32_t ctrl_max;$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon7
ctrl_menu_info	common.h	/^	} ctrl_menu_info;$/;"	m	struct:_isp_ctrl_ui_info	typeref:struct:_isp_ctrl_ui_info::__anon2
ctrl_min	common.h	/^			int32_t ctrl_min;$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon7
ctrl_name	common.h	/^		char ctrl_name[MAX_CTRL_UI_STRING_LEN];$/;"	m	struct:_isp_ctrl_ui_info::__anon1
ctrl_step	common.h	/^			int32_t ctrl_step;$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon7
ctrl_type	common.h	/^	uint8_t ctrl_type;$/;"	m	struct:_isp_ctrl_info_std
ctrl_ui_data	common.h	/^	ISP_CTRL_UI_INFO ctrl_ui_data;$/;"	m	struct:_isp_ctrl_info_std
ctrl_ui_flags	common.h	/^		uint8_t ctrl_ui_flags;$/;"	m	struct:_isp_ctrl_ui_info::__anon1
ctrl_ui_info	common.h	/^	} ctrl_ui_info;$/;"	m	struct:_isp_ctrl_ui_info	typeref:struct:_isp_ctrl_ui_info::__anon1
ctrl_ui_type	common.h	/^		uint8_t ctrl_ui_type;$/;"	m	struct:_isp_ctrl_ui_info::__anon1
ctrldb	common.h	/^	uint32_t *ctrldb;$/;"	m	struct:ar0234
ctrls	common.h	/^	struct v4l2_ctrl_handler ctrls;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_ctrl_handler
current_fr	common.h	/^	enum ar0234_frame_rate current_fr;$/;"	m	struct:ar0234	typeref:enum:ar0234::ar0234_frame_rate
current_mode	common.h	/^	const struct ar0234_mode_info *current_mode;$/;"	m	struct:ar0234	typeref:struct:ar0234::ar0234_mode_info
data	common.h	/^	const struct reg_value *data;$/;"	m	struct:ar0234_mode_info	typeref:struct:ar0234_mode_info::reg_value
data_size	common.h	/^	u32 data_size;$/;"	m	struct:ar0234_mode_info
datasize	firmware.h	/^        unsigned char datasize;$/;"	m	struct:_ihex_rec
debug_printk	ecam-ar0234.c	12;"	d	file:
debug_printk	ecam-ar0234.c	14;"	d	file:
dev	common.h	/^	struct device *dev;$/;"	m	struct:ar0234	typeref:struct:ar0234::device
disc	common.h	/^		} disc;$/;"	m	union:_isp_stream_info::__anon3	typeref:struct:_isp_stream_info::__anon3::__anon4
ep	common.h	/^	struct v4l2_fwnode_endpoint ep;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_fwnode_endpoint
errorcheck	ecam-ar0234.c	/^unsigned char errorcheck(char *data, unsigned int len)$/;"	f
ext	common.h	/^		} ext;$/;"	m	union:_isp_ctrl_info_std::__anon6	typeref:struct:_isp_ctrl_info_std::__anon6::__anon8
fmt	common.h	/^	struct v4l2_mbus_framefmt fmt;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_mbus_framefmt
fmt_fourcc	common.h	/^	uint32_t fmt_fourcc;$/;"	m	struct:_isp_stream_info
format_fourcc	common.h	/^        uint32_t format_fourcc;$/;"	m	struct:ar0234
frame_interval	common.h	/^	struct v4l2_fract frame_interval;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_fract
frame_rate	common.h	/^	} frame_rate;$/;"	m	struct:_isp_stream_info	typeref:union:_isp_stream_info::__anon3
frame_rate_denom	common.h	/^			uint16_t frame_rate_denom;$/;"	m	struct:_isp_stream_info::__anon3::__anon4
frame_rate_max_denom	common.h	/^			uint16_t frame_rate_max_denom;$/;"	m	struct:_isp_stream_info::__anon3::__anon5
frame_rate_max_num	common.h	/^			uint16_t frame_rate_max_num;$/;"	m	struct:_isp_stream_info::__anon3::__anon5
frame_rate_min_denom	common.h	/^			uint16_t frame_rate_min_denom;$/;"	m	struct:_isp_stream_info::__anon3::__anon5
frame_rate_min_num	common.h	/^			uint16_t frame_rate_min_num;$/;"	m	struct:_isp_stream_info::__anon3::__anon5
frame_rate_num	common.h	/^			uint16_t frame_rate_num;$/;"	m	struct:_isp_stream_info::__anon3::__anon4
frame_rate_step_denom	common.h	/^			uint16_t frame_rate_step_denom;$/;"	m	struct:_isp_stream_info::__anon3::__anon5
frame_rate_step_num	common.h	/^			uint16_t frame_rate_step_num;$/;"	m	struct:_isp_stream_info::__anon3::__anon5
frame_rate_type	common.h	/^	uint8_t frame_rate_type;$/;"	m	struct:_isp_stream_info
framerates	common.h	/^        const int       *framerates;$/;"	m	struct:camera_common_frmfmt
fw_version	firmware.h	/^uint8_t *fw_version = NULL;$/;"	v
g_bload_buf	firmware.h	/^unsigned char g_bload_buf[MAX_BUF_LEN] = { 0 };$/;"	v
g_bload_crc16	firmware.h	/^unsigned short int g_bload_crc16 = 0x0000;$/;"	v
g_bload_flashaddr	firmware.h	/^unsigned int g_bload_flashaddr = 0x0000;$/;"	v
g_mcu_fw_buf	firmware.h	/^const char g_mcu_fw_buf[] =$/;"	v
hdr_en	common.h	/^        bool    hdr_en;$/;"	m	struct:camera_common_frmfmt
height	common.h	/^	u32 height;$/;"	m	struct:ar0234_mode_info
height	common.h	/^	uint16_t height;$/;"	m	struct:_isp_stream_info
i2c_client	common.h	/^	struct i2c_client *i2c_client;$/;"	m	struct:ar0234	typeref:struct:ar0234::i2c_client
last_sync_mode	common.h	/^	uint8_t last_sync_mode;$/;"	m	struct:ar0234
link_freq	common.h	/^	struct v4l2_ctrl *link_freq;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_ctrl
link_freq	common.h	/^	u32 link_freq;$/;"	m	struct:ar0234_mode_info
link_freq	common.h	/^static const s64 link_freq[] = {$/;"	v
max_fps	common.h	/^	u32 max_fps;$/;"	m	struct:ar0234_mode_info
mc_data	firmware.h	/^unsigned char mc_data[MCU_BUFFER_SIZE];$/;"	v
mc_ret_data	firmware.h	/^unsigned char mc_ret_data[MCU_BUFFER_SIZE];$/;"	v
mcu_bload_ascii2hex	ecam-ar0234.c	/^int mcu_bload_ascii2hex(unsigned char ascii)$/;"	f
mcu_bload_calc_crc16	ecam-ar0234.c	/^unsigned short int mcu_bload_calc_crc16(unsigned char *buf, int len)$/;"	f
mcu_bload_erase_flash	ecam-ar0234.c	/^int mcu_bload_erase_flash(struct i2c_client *client)$/;"	f
mcu_bload_get_version	ecam-ar0234.c	/^int mcu_bload_get_version(struct i2c_client *client)$/;"	f
mcu_bload_go	ecam-ar0234.c	/^int mcu_bload_go(struct i2c_client *client)$/;"	f
mcu_bload_inv_checksum	ecam-ar0234.c	/^unsigned char mcu_bload_inv_checksum(unsigned char *buf, int len)$/;"	f
mcu_bload_parse_send_cmd	ecam-ar0234.c	/^int mcu_bload_parse_send_cmd(struct i2c_client *client,$/;"	f
mcu_bload_read	ecam-ar0234.c	/^int mcu_bload_read(struct i2c_client *client,$/;"	f
mcu_bload_update_fw	ecam-ar0234.c	/^int mcu_bload_update_fw(struct i2c_client *client)$/;"	f
mcu_bload_verify_flash	ecam-ar0234.c	/^int mcu_bload_verify_flash(struct i2c_client *client,$/;"	f
mcu_cam_frmfmt	common.h	/^        struct camera_common_frmfmt *mcu_cam_frmfmt;$/;"	m	struct:ar0234	typeref:struct:ar0234::camera_common_frmfmt
mcu_cam_init	ecam-ar0234.c	/^static int mcu_cam_init(struct i2c_client *client)$/;"	f	file:
mcu_cam_stream_off	ecam-ar0234.c	/^static int mcu_cam_stream_off(struct i2c_client *client)$/;"	f	file:
mcu_cam_stream_on	ecam-ar0234.c	/^static int mcu_cam_stream_on(struct i2c_client *client)$/;"	f	file:
mcu_ctrl_info	common.h	/^	ISP_CTRL_INFO *mcu_ctrl_info;$/;"	m	struct:ar0234
mcu_fw_update	ecam-ar0234.c	/^static int mcu_fw_update(struct i2c_client *client, unsigned char *mcu_fw_version)$/;"	f	file:
mcu_get_cmd_status	ecam-ar0234.c	/^int mcu_get_cmd_status(struct i2c_client *client,$/;"	f
mcu_get_ctrl	ecam-ar0234.c	/^static int mcu_get_ctrl(struct i2c_client *client, uint32_t arg_ctrl_id,$/;"	f	file:
mcu_get_ctrl_ui	ecam-ar0234.c	/^static int mcu_get_ctrl_ui(struct i2c_client *client,$/;"	f	file:
mcu_get_fw_version	ecam-ar0234.c	/^static int mcu_get_fw_version(struct i2c_client *client, unsigned char *fw_version, unsigned char *txt_fw_version)$/;"	f	file:
mcu_get_sensor_id	ecam-ar0234.c	/^static int mcu_get_sensor_id(struct i2c_client *client, uint16_t * sensor_id)$/;"	f	file:
mcu_i2c_mutex	common.h	/^DEFINE_MUTEX(mcu_i2c_mutex);$/;"	v
mcu_jump_bload	ecam-ar0234.c	/^static int mcu_jump_bload(struct i2c_client *client)$/;"	f	file:
mcu_list_ctrls	ecam-ar0234.c	/^static int mcu_list_ctrls(struct i2c_client *client,$/;"	f	file:
mcu_list_fmts	ecam-ar0234.c	/^static int mcu_list_fmts(struct i2c_client *client, ISP_STREAM_INFO *stream_info, int *frm_fmt_size, struct ar0234 *ar0234)$/;"	f	file:
mcu_mipi_configuration	ecam-ar0234.c	/^static int mcu_mipi_configuration(struct i2c_client *client, struct ar0234 *ar0234, u8 cmd_id)$/;"	f	file:
mcu_set_ctrl	ecam-ar0234.c	/^static int mcu_set_ctrl(struct i2c_client *client, uint32_t arg_ctrl_id,$/;"	f	file:
mcu_stream_config	ecam-ar0234.c	/^static int mcu_stream_config(struct i2c_client *client, uint32_t format,$/;"	f	file:
menu	common.h	/^		char **menu;$/;"	m	struct:_isp_ctrl_ui_info::__anon2
mipi_clk_config	common.h	/^	uint16_t mipi_clk_config;$/;"	m	struct:ar0234
mipi_lane_config	common.h	/^	uint16_t mipi_lane_config;$/;"	m	struct:ar0234
mode	common.h	/^        int     mode;$/;"	m	struct:camera_common_frmfmt
num_ctrls	common.h	/^	int num_ctrls;$/;"	m	struct:ar0234
num_framerates	common.h	/^        int     num_framerates;$/;"	m	struct:camera_common_frmfmt
num_menu_elem	common.h	/^		uint8_t num_menu_elem;$/;"	m	struct:_isp_ctrl_ui_info::__anon2
numfmts	common.h	/^	uint16_t prev_index,numfmts;$/;"	m	struct:ar0234
obj-m	Makefile	/^obj-m := ecam-ar0234.o $/;"	m
pad	common.h	/^	struct media_pad pad;$/;"	m	struct:ar0234	typeref:struct:ar0234::media_pad
pixel_clock	common.h	/^	struct v4l2_ctrl *pixel_clock;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_ctrl
pixel_clock	common.h	/^	u32 pixel_clock;$/;"	m	struct:ar0234_mode_info
power_count	common.h	/^	int power_count;$/;"	m	struct:ar0234
power_lock	common.h	/^	struct mutex power_lock; \/* lock to protect power state *\/$/;"	m	struct:ar0234	typeref:struct:ar0234::mutex
prev_index	common.h	/^	uint16_t prev_index,numfmts;$/;"	m	struct:ar0234
pwdn_gpio	common.h	/^	struct gpio_desc *pwdn_gpio;$/;"	m	struct:ar0234	typeref:struct:ar0234::gpio_desc
recdata	firmware.h	/^        unsigned char recdata[];$/;"	m	struct:_ihex_rec
rectype	firmware.h	/^        unsigned char rectype;$/;"	m	struct:_ihex_rec
reg	common.h	/^	u16 reg;$/;"	m	struct:reg_value
reg_value	common.h	/^struct reg_value {$/;"	s
rst_gpio	common.h	/^	struct gpio_desc *rst_gpio;$/;"	m	struct:ar0234	typeref:struct:ar0234::gpio_desc
sd	common.h	/^	struct v4l2_subdev sd;$/;"	m	struct:ar0234	typeref:struct:ar0234::v4l2_subdev
size	common.h	/^        struct v4l2_frmsize_discrete    size;$/;"	m	struct:camera_common_frmfmt	typeref:struct:camera_common_frmfmt::v4l2_frmsize_discrete
std	common.h	/^		} std;$/;"	m	union:_isp_ctrl_info_std::__anon6	typeref:struct:_isp_ctrl_info_std::__anon6::__anon7
stream_info	common.h	/^	ISP_STREAM_INFO *stream_info;$/;"	m	struct:ar0234
stream_on_set	common.h	/^        bool stream_on_set;$/;"	m	struct:ar0234
streamdb	common.h	/^	int *streamdb;$/;"	m	struct:ar0234
streaming	common.h	/^	bool streaming;$/;"	m	struct:ar0234
supplies	common.h	/^	struct regulator_bulk_data supplies[AR0234_NUM_SUPPLIES];$/;"	m	struct:ar0234	typeref:struct:ar0234::regulator_bulk_data
timing_tc_reg20	common.h	/^	u8 timing_tc_reg20;$/;"	m	struct:ar0234
timing_tc_reg21	common.h	/^	u8 timing_tc_reg21;$/;"	m	struct:ar0234
to_ar0234	common.h	/^static inline struct ar0234 *to_ar0234(struct v4l2_subdev *sd)$/;"	f
val	common.h	/^	u8 val;$/;"	m	struct:reg_value
val_data	common.h	/^			uint8_t val_data[MAX_CTRL_DATA_LEN];$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon8
val_length	common.h	/^			uint32_t val_length;$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon8
val_type	common.h	/^			uint8_t val_type;$/;"	m	struct:_isp_ctrl_info_std::__anon6::__anon8
width	common.h	/^	u32 width;$/;"	m	struct:ar0234_mode_info
width	common.h	/^	uint16_t width;$/;"	m	struct:_isp_stream_info
xclk	common.h	/^	struct clk *xclk;$/;"	m	struct:ar0234	typeref:struct:ar0234::clk
